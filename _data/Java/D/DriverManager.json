{
    "description": "",
    "code": "public class InsertarDatos {\n\n  public static void main(String[] args) {\n \n    Connection con = null;\n     PreparedStatement stmt = null;\n\n     String sDriver = \"com.mysql.jdbc.Driver\";\n     String sURL = \"jdbc:mysql://localhost:3306/lineadecodigo\";\n\n     try{\n        Class.forName(sDriver).newInstance();    \n        con = DriverManager.getConnection(sURL,\"root\",\"\");\n        \n        String sISBN = \"84-9815-212-7\";\n        String sTitulo = \"Yo, Claudio\";\n        String sDescripcion=\"Supuesta autobiograf\u00eda de Claudio\";\n        String sCategoria = \"Novela Hist\u00f3rica\";\n        int idAutor = 3;\n                     \n        stmt = con.prepareStatement(\"INSERT INTO libros VALUES (?,?,?,?,?)\");\n        stmt.setString(1,sISBN);\n        stmt.setInt(2,idAutor);\n        stmt.setString(3,sTitulo);\n        stmt.setString(4,sDescripcion);\n        stmt.setString(5,sCategoria);\n                     \n        int retorno = stmt.executeUpdate();\n        if (retorno>0)\n           System.out.println(\"Insertado correctamente\");      \n                     \n     } catch (SQLException sqle){\n        System.out.println(\"SQLState: \" \n           + sqle.getSQLState());\n        System.out.println(\"SQLErrorCode: \" \n           + sqle.getErrorCode());\n        sqle.printStackTrace();\n     } catch (Exception e){\n        e.printStackTrace();\n     } finally {\n        if (con\u00a0!= null) {\n           try{\n              stmt.close();\n              con.close();\n           } catch(Exception e){\n              e.printStackTrace();\n           }\n        }\n     }           \n   }\n}\n",
    "ldc": [
        {
            "nombre": "Actualizar datos con JDBC",
            "url": "http://lineadecodigo.com/Java/actualizar-datos-con-jdbc/"
        }
    ],
    "metodos": [
        {
            "nombre": "deregisterDriver",
            "description": "",
            "parametros": [
                {
                    "nombre": "Driver driver",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "drivers",
            "description": ""
        },
        {
            "nombre": "getConnection",
            "description": "M\u00e9todo que nos permite establecer una conexi\u00f3n con la base de datos.\n",
            "parametros": [
                {
                    "nombre": "Properties info",
                    "description": ""
                },
                {
                    "nombre": "String url",
                    "description": ""
                },
                {
                    "nombre": "String user",
                    "description": ""
                },
                {
                    "nombre": "String password",
                    "description": ""
                }
            ],
            "code": "public class InsertarDatos {\n\n  public static void main(String[] args) {\n \n    Connection con = null;\n     PreparedStatement stmt = null;\n\n     String sDriver = \"com.mysql.jdbc.Driver\";\n     String sURL = \"jdbc:mysql://localhost:3306/lineadecodigo\";\n\n     try{\n        Class.forName(sDriver).newInstance();    \n        con = DriverManager.getConnection(sURL,\"root\",\"\");\n        \n        String sISBN = \"84-9815-212-7\";\n        String sTitulo = \"Yo, Claudio\";\n        String sDescripcion=\"Supuesta autobiograf\u00eda de Claudio\";\n        String sCategoria = \"Novela Hist\u00f3rica\";\n        int idAutor = 3;\n                     \n        stmt = con.prepareStatement(\"INSERT INTO libros VALUES (?,?,?,?,?)\");\n        stmt.setString(1,sISBN);\n        stmt.setInt(2,idAutor);\n        stmt.setString(3,sTitulo);\n        stmt.setString(4,sDescripcion);\n        stmt.setString(5,sCategoria);\n                     \n        int retorno = stmt.executeUpdate();\n        if (retorno>0)\n           System.out.println(\"Insertado correctamente\");      \n                     \n     } catch (SQLException sqle){\n        System.out.println(\"SQLState: \" \n           + sqle.getSQLState());\n        System.out.println(\"SQLErrorCode: \" \n           + sqle.getErrorCode());\n        sqle.printStackTrace();\n     } catch (Exception e){\n        e.printStackTrace();\n     } finally {\n        if (con\u00a0!= null) {\n           try{\n              stmt.close();\n              con.close();\n           } catch(Exception e){\n              e.printStackTrace();\n           }\n        }\n     }           \n   }\n}\n",
            "ldc": [
                {
                    "nombre": "Actualizar datos con JDBC",
                    "url": "http://lineadecodigo.com/Java/actualizar-datos-con-jdbc/"
                }
            ]
        },
        {
            "nombre": "getDriver",
            "description": "",
            "parametros": [
                {
                    "nombre": "String url",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "getDrivers",
            "description": "M\u00e9todo que devuelve una lista enumerada con todos los drivers JDBC que est\u00e1n cargados y pueden utilizarse.\n",
            "code": "for (Enumeration e = DriverManager.getDrivers(); e.hasMoreElements()\u00a0;) {\n  Driver driver = (Driver)e.nextElement();\n  System.out.println(\"Nombre: \" + driver.getClass().getName());\n  System.out.println(\"Version: \" + driver.getMajorVersion());\n  System.out.println(\"Release: \" + driver.getMinorVersion());\n\n  if (driver.jdbcCompliant())\n    System.out.println(\"Es un dirver JDBC Compliant\");\n  else\n    System.out.println(\"NO es un driver JDBC Compliant\");\t   \n}\t\n",
            "ldc": []
        },
        {
            "nombre": "getLoginTimeout",
            "description": ""
        },
        {
            "nombre": "getLogStream",
            "description": ""
        },
        {
            "nombre": "getLogWriter",
            "description": ""
        },
        {
            "nombre": "println",
            "description": "",
            "parametros": [
                {
                    "nombre": "String message",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "registerDriver",
            "description": "",
            "parametros": [
                {
                    "nombre": "Driver driver",
                    "description": ""
                },
                {
                    "nombre": "DriverAction da",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "setLoginTimeout",
            "description": "",
            "parametros": [
                {
                    "nombre": "int seconds",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "setLogStream",
            "description": "",
            "parametros": [
                {
                    "nombre": "PrintStream out",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "setLogWriter",
            "description": "",
            "parametros": [
                {
                    "nombre": "PrintWriter out",
                    "description": ""
                }
            ]
        }
    ]
}