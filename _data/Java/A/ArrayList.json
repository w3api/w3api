{
    "description": "",
    "code": "// ArrayList con tama\u00f1o\nArrayList<String> al = new ArrayList<String>();\n\t\t\n// A\u00f1adir elementos a un ArrayList\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\t\t\n\t\t\n// Recorrer un ArrayList con un Iterador\nIterator<String> it = al.iterator();\nwhile(it.hasNext())\n System.out.println(it.next());\n",
    "ldc": [],
    "constructores": [
        {
            "nombre": "ArrayList",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<? extends E> c",
                    "description": ""
                },
                {
                    "nombre": "int initialCapacity",
                    "description": ""
                }
            ]
        }
    ],
    "metodos": [
        {
            "nombre": "add",
            "description": "M\u00e9todo que nos permite a\u00f1adir un elemento a un ArrayList.\n",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                },
                {
                    "nombre": "E e",
                    "description": ""
                },
                {
                    "nombre": "E element",
                    "description": ""
                }
            ],
            "code": "ArrayList<String> al = new ArrayList<String>();\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\n",
            "ldc": []
        },
        {
            "nombre": "addAll",
            "description": "M\u00e9todo que nos permite a\u00f1adir una colecci\u00f3n al final o en un punto en concreto de un ArrayList.\n",
            "parametros": [
                {
                    "nombre": "Collection<? extends E> c",
                    "description": ""
                },
                {
                    "nombre": "int index",
                    "description": ""
                }
            ],
            "code": "// ArrayList con tama\u00f1o\nArrayList<String> al = new ArrayList<String>();\n\t\t\n// A\u00f1adir elementos a un ArrayList\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\t\t\n\t\t\nVector<String> vector = new Vector<String>();\nvector.add(\"Irene\");\nvector.add(\"Mar\u00eda\");\n\t\t\n// A\u00f1adir elementos al final del ArrayList\n// Es una colecci\u00f3n\nal.addAll(vector);\n",
            "ldc": []
        },
        {
            "nombre": "clear",
            "description": "Elimina todos los elementos de un ArrayList.\n",
            "code": "ArrayList<String> al = new ArrayList<String>();\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\n\nSystem.out.println(\"La lista contiene \"+al.size()+\" elementos\");\n\t\t\n// Eliminamos todos los elementos\nal.clear();\n\t    \nSystem.out.println(\"La lista contiene \"+al.size()+\" elementos\");\n",
            "ldc": []
        },
        {
            "nombre": "clone",
            "description": ""
        },
        {
            "nombre": "contains",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "ensureCapacity",
            "description": "",
            "parametros": [
                {
                    "nombre": "int minCapacity",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "forEach",
            "description": "",
            "parametros": [
                {
                    "nombre": "Consumer<? super E> action",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "get",
            "description": "Devuelve un elemento del ArrayList de la posici\u00f3n indicada como par\u00e1metro.\n",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                }
            ],
            "code": "// ArrayList con tama\u00f1o\nArrayList<String> al = new ArrayList<String>();\n\t\t\n// A\u00f1adir elementos a un ArrayList\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\t\t\n\t\t\n// Recorremos el Array\nfor(int x=0;x<al.size();x++) {\n System.out.println(al.get(x));\n}\n",
            "ldc": []
        },
        {
            "nombre": "indexOf",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "isEmpty",
            "description": ""
        },
        {
            "nombre": "iterator",
            "description": "Devuelve un iterador sobre los elementos de la lista.\n",
            "code": "// ArrayList con tama\u00f1o\nArrayList<String> al = new ArrayList<String>();\n\t\t\n// A\u00f1adir elementos a un ArrayList\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\t\t\n\t\nIterator<String> it = al.iterator();\nwhile(it.hasNext())\n System.out.println(it.next());\n",
            "ldc": []
        },
        {
            "nombre": "lastIndexOf",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "listIterator",
            "description": "Devuelve un iterador sobre los elementos de la lista en la posici\u00f3n indicada como par\u00e1metro.\n",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                }
            ],
            "code": "// ArrayList con tama\u00f1o\nArrayList<String> al = new ArrayList<String>();\n\t\t\n// A\u00f1adir elementos a un ArrayList\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\t\t\n\t\nListIterator<String> it = al.listIterator();\nwhile(it.hasNext())\n System.out.println(it.next());\n\t    \nwhile(it.hasPrevious())\n System.out.println(it.previous());\n",
            "ldc": []
        },
        {
            "nombre": "remove",
            "description": "Elimina un elemento dentro de un ArrayList. Bien indicando la posici\u00f3n en la que se encuentra el elemento. O bien por coincidencia con el objeto pasado como par\u00e1metro.\n",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                },
                {
                    "nombre": "int index",
                    "description": ""
                }
            ],
            "code": "// ArrayList con tama\u00f1o\nArrayList<String> al = new ArrayList<String>();\n\t\t\n// A\u00f1adir elementos a un ArrayList\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\t\t\n\t\t\n// Recorrer un ArrayList con un Iterador\nIterator<String> it = al.iterator();\nwhile(it.hasNext())\n System.out.println(it.next());\n\t\t\n// Eliminamos el segundo elemento\nal.remove(1);\n\nit = al.iterator();\nwhile(it.hasNext())\n System.out.println(it.next());\n",
            "ldc": []
        },
        {
            "nombre": "removeAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<?> c",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "removeIf",
            "description": "",
            "parametros": [
                {
                    "nombre": "Predicate<? super E> filter",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "removeRange",
            "description": "",
            "parametros": [
                {
                    "nombre": "int fromIndex",
                    "description": ""
                },
                {
                    "nombre": "int toIndex",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "retainAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<?> c",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "set",
            "description": "M\u00e9todo que permite sustituir un elemento por otro dentro de un ArrayList.\n",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                },
                {
                    "nombre": "E element",
                    "description": ""
                }
            ],
            "code": "ArrayList<String> al = new ArrayList<String>();\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\n\nIterator<String> it = al.iterator();\nwhile(it.hasNext())\n System.out.println(it.next());\n\t\t\n// Eliminamos el primer elemento\n al.set(2,\"Teresa\");\n\t    \nit = al.iterator();\nwhile(it.hasNext())\n System.out.println(it.next());\n",
            "ldc": []
        },
        {
            "nombre": "size",
            "description": "Devuelve el tama\u00f1o de un ArrayList.\n",
            "code": "// ArrayList con tama\u00f1o\nArrayList<String> al = new ArrayList<String>();\n\t\t\n// A\u00f1adir elementos a un ArrayList\nal.add(\"Victor\");\nal.add(\"Luis\");\nal.add(\"Elena\");\t\t\n\t\t\n// Recorremos el Array\nfor(int x=0;x<al.size();x++) {\n System.out.println(al.get(x));\n}\n",
            "ldc": []
        },
        {
            "nombre": "spliterator",
            "description": ""
        },
        {
            "nombre": "subList",
            "description": "",
            "parametros": [
                {
                    "nombre": "int fromIndex",
                    "description": ""
                },
                {
                    "nombre": "int toIndex",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "toArray",
            "description": "",
            "parametros": [
                {
                    "nombre": "T[] a",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "trimToSize",
            "description": ""
        }
    ]
}