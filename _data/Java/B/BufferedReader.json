{
    "description": "Permite leer texto de un InputStream de una forma sencilla. Permite leer caracteres, arrays y l\u00edneas.\n",
    "code": "BufferedReader br;\nbr = new BufferedReader(new InputStreamReader(System.in));\nString texto;\n\ntry{ \n br.readLine());\n} catch (IOException ioe){ \n ioe.printStackTrace();\n}\n",
    "ldc": [
        {
            "nombre": "Comparar el contenido de dos ficheros con Java",
            "url": "http://lineadecodigo.com/Java/comparar-el-contenido-de-dos-ficheros-con-java/"
        },
        {
            "nombre": "Conversor de monedas",
            "url": "http://lineadecodigo.com/Java/conversor-de-monedas/"
        }
    ],
    "constructores": [
        {
            "nombre": "BufferedReader",
            "description": "",
            "parametros": [
                {
                    "nombre": "int sz",
                    "description": ""
                },
                {
                    "nombre": "Reader in",
                    "description": ""
                }
            ]
        }
    ],
    "metodos": [
        {
            "nombre": "lines",
            "description": "M\u00e9todo que devuelve un Stream cuyo contenido son las l\u00edneas que hay en el Java:BufferedReader.\n",
            "code": "long vacias = bf.lines().filter(l -> l.isEmpty()).count();\n",
            "ldc": []
        },
        {
            "nombre": "mark",
            "description": "",
            "parametros": [
                {
                    "nombre": "int readAheadLimit",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "markSupported",
            "description": ""
        },
        {
            "nombre": "read",
            "description": "",
            "parametros": [
                {
                    "nombre": "char[] cbuf",
                    "description": ""
                },
                {
                    "nombre": "int len",
                    "description": ""
                },
                {
                    "nombre": "int off",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "readLine",
            "description": "Lee una l\u00ednea de texto hasta que encuentra un car\u00e1cter de salto de l\u00ednea (\\n) y retorno de carro (\\r).\n",
            "code": "BufferedReader br;\nbr = new BufferedReader(new InputStreamReader(System.in));\nString texto;\n\ntry{ \n br.readLine());\n} catch (IOException ioe){ \n ioe.printStackTrace();\n}\n",
            "ldc": [
                {
                    "nombre": "Comparar el contenido de dos ficheros con Java",
                    "url": "http://lineadecodigo.com/Java/comparar-el-contenido-de-dos-ficheros-con-java/"
                }
            ]
        },
        {
            "nombre": "ready",
            "description": ""
        },
        {
            "nombre": "reset",
            "description": ""
        },
        {
            "nombre": "skip",
            "description": "",
            "parametros": [
                {
                    "nombre": "long n",
                    "description": ""
                }
            ]
        }
    ]
}