{
    "description": "",
    "code": "Map<String,String> hm = new HashMap<String,String>();\n\t   \nhm.put(\"1\",\"Luis\");\nhm.put(\"2\",\"Amaya\");\nhm.put(\"3\",\"Julio\");\n\n// A\u00f1adimos un elemento con clave existente. Se sobrescribe su valor\n// ya que no puede haber valores duplicados\nhm.put(\"1\",\"Victor\");\n\t\t   \nIterator<Entry<String,String>> it = hm.entrySet().iterator();\n\t\t\nwhile (it.hasNext()) {\n Entry<String,String> e = it.next();\n System.out.println(e.getKey() + \" \" + e.getValue());\n}\n",
    "ldc": [
        {
            "nombre": "Calcular la moda de una distribuci\u00f3n con Java",
            "url": "http://lineadecodigo.com/java/calcular-la-moda-de-una-distribucion-con-java/"
        }
    ],
    "metodos": [
        {
            "nombre": "clear",
            "description": ""
        },
        {
            "nombre": "compute",
            "description": "",
            "parametros": [
                {
                    "nombre": "BiFunction<? super K",
                    "description": ""
                },
                {
                    "nombre": "K key",
                    "description": ""
                },
                {
                    "nombre": "? extends V> remappingFunction",
                    "description": ""
                },
                {
                    "nombre": "? super V",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "computeIfAbsent",
            "description": "",
            "parametros": [
                {
                    "nombre": "? extends V> mappingFunction",
                    "description": ""
                },
                {
                    "nombre": "K key",
                    "description": ""
                },
                {
                    "nombre": "Function<? super K",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "computeIfPresent",
            "description": "",
            "parametros": [
                {
                    "nombre": "BiFunction<? super K",
                    "description": ""
                },
                {
                    "nombre": "K key",
                    "description": ""
                },
                {
                    "nombre": "? extends V> remappingFunction",
                    "description": ""
                },
                {
                    "nombre": "? super V",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "containsKey",
            "description": "M\u00e9todo que comprueba si una clave est\u00e1 dada de alta en el mapa.\n",
            "parametros": [
                {
                    "nombre": "Object key",
                    "description": ""
                }
            ],
            "code": "int[] elementos = {1,3,4,5,3,2,1,2,2,1,5,5,8,9,6,6,3,4,3,1,3,5,3};\nMap<Integer,Integer> m = new HashMap<Integer,Integer>();\t\t\t\t\n\t\t\nfor (int elemento: elementos){\t\t\t\n  if (m.containsKey(elemento))\t\t\t\t\t\n    m.put(elemento,m.get(elemento)+1);\n  else\n    m.put(elemento,1);\t\t\t\n}\n",
            "ldc": [
                {
                    "nombre": "Calcular la moda de una distribuci\u00f3n con Java",
                    "url": "http://lineadecodigo.com/java/calcular-la-moda-de-una-distribucion-con-java/"
                }
            ]
        },
        {
            "nombre": "containsValue",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object value",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "copyOf",
            "description": "",
            "parametros": [
                {
                    "nombre": "Map<? extends K",
                    "description": ""
                },
                {
                    "nombre": "? extends V> map",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "entry",
            "description": "",
            "parametros": [
                {
                    "nombre": "V v",
                    "description": ""
                },
                {
                    "nombre": "K k",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "entrySet",
            "description": ""
        },
        {
            "nombre": "equals",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "forEach",
            "description": "",
            "parametros": [
                {
                    "nombre": "? super V> action",
                    "description": ""
                },
                {
                    "nombre": "BiConsumer<? super K",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "get",
            "description": "Retorna el valor del mapa para la clave pasada como par\u00e1metro.\n",
            "parametros": [
                {
                    "nombre": "Object key",
                    "description": ""
                }
            ],
            "code": "Iterator<Entry<String,String>> it = hm.entrySet().iterator();\n\t\t\nwhile (it.hasNext()) {\n Entry<String,String> e = it.next();\n System.out.println(e.getKey() + \" \" + e.getValue());\n}\n",
            "ldc": []
        },
        {
            "nombre": "getOrDefault",
            "description": "",
            "parametros": [
                {
                    "nombre": "V defaultValue",
                    "description": ""
                },
                {
                    "nombre": "Object key",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "hashCode",
            "description": ""
        },
        {
            "nombre": "isEmpty",
            "description": ""
        },
        {
            "nombre": "keySet",
            "description": ""
        },
        {
            "nombre": "merge",
            "description": "",
            "parametros": [
                {
                    "nombre": "? super V",
                    "description": ""
                },
                {
                    "nombre": "V value",
                    "description": ""
                },
                {
                    "nombre": "? extends V> remappingFunction",
                    "description": ""
                },
                {
                    "nombre": "K key",
                    "description": ""
                },
                {
                    "nombre": "BiFunction<? super V",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "of",
            "description": "",
            "parametros": [
                {
                    "nombre": "K k10",
                    "description": ""
                },
                {
                    "nombre": "K k3",
                    "description": ""
                },
                {
                    "nombre": "K k2",
                    "description": ""
                },
                {
                    "nombre": "V v7",
                    "description": ""
                },
                {
                    "nombre": "V v8",
                    "description": ""
                },
                {
                    "nombre": "V v4",
                    "description": ""
                },
                {
                    "nombre": "K k8",
                    "description": ""
                },
                {
                    "nombre": "K k7",
                    "description": ""
                },
                {
                    "nombre": "K k1",
                    "description": ""
                },
                {
                    "nombre": "V v1",
                    "description": ""
                },
                {
                    "nombre": "V v3",
                    "description": ""
                },
                {
                    "nombre": "K k5",
                    "description": ""
                },
                {
                    "nombre": "V v5",
                    "description": ""
                },
                {
                    "nombre": "K k9",
                    "description": ""
                },
                {
                    "nombre": "K k4",
                    "description": ""
                },
                {
                    "nombre": "V v9",
                    "description": ""
                },
                {
                    "nombre": "V v10",
                    "description": ""
                },
                {
                    "nombre": "K k6",
                    "description": ""
                },
                {
                    "nombre": "V v6",
                    "description": ""
                },
                {
                    "nombre": "V v2",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "ofEntries",
            "description": "",
            "parametros": [
                {
                    "nombre": "? extends V>... entries",
                    "description": ""
                },
                {
                    "nombre": "Map.Entry<? extends K",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "put",
            "description": "Inserta un par clave/valor en el mapa utilizando los valores pasados como par\u00e1metros.\n",
            "parametros": [
                {
                    "nombre": "V value",
                    "description": ""
                },
                {
                    "nombre": "K key",
                    "description": ""
                }
            ],
            "code": "Map<String,String> hm = new HashMap<String,String>();\n\t   \nhm.put(\"1\",\"Luis\");\nhm.put(\"2\",\"Amaya\");\nhm.put(\"3\",\"Julio\");\n",
            "ldc": [
                {
                    "nombre": "Calcular la moda de una distribuci\u00f3n con Java",
                    "url": "http://lineadecodigo.com/java/calcular-la-moda-de-una-distribucion-con-java/"
                }
            ]
        },
        {
            "nombre": "putAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "Map<? extends K",
                    "description": ""
                },
                {
                    "nombre": "? extends V> m",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "putIfAbsent",
            "description": "",
            "parametros": [
                {
                    "nombre": "V value",
                    "description": ""
                },
                {
                    "nombre": "K key",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "remove",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object key",
                    "description": ""
                },
                {
                    "nombre": "Object value",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "replace",
            "description": "",
            "parametros": [
                {
                    "nombre": "V value",
                    "description": ""
                },
                {
                    "nombre": "V newValue",
                    "description": ""
                },
                {
                    "nombre": "K key",
                    "description": ""
                },
                {
                    "nombre": "V oldValue",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "replaceAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "BiFunction<? super K",
                    "description": ""
                },
                {
                    "nombre": "? extends V> function",
                    "description": ""
                },
                {
                    "nombre": "? super V",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "size",
            "description": ""
        },
        {
            "nombre": "values",
            "description": ""
        }
    ]
}