{
    "description": "",
    "code": "",
    "ldc": [
        {
            "nombre": "Calcular la moda de una distribuci\u00f3n con Java",
            "url": "http://lineadecodigo.com/Java/calcular-la-moda-de-una-distribucion-con-java/"
        }
    ],
    "metodos": [
        {
            "nombre": "add",
            "description": "M\u00e9todo que nos permite a\u00f1adir un elemento a la lista.\n",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                },
                {
                    "nombre": "E e",
                    "description": ""
                },
                {
                    "nombre": "E element",
                    "description": ""
                }
            ],
            "code": "List<String> lista = new ArrayList<String>();\n\t\nlista.add(1,\"Elemento Uno\");\nlista.add(2,\"Elemento Dos\");\nlista.add(\"Elemento Tres\");\n",
            "ldc": [
                {
                    "nombre": "Calcular la moda de una distribuci\u00f3n con Java",
                    "url": "http://lineadecodigo.com/Java/calcular-la-moda-de-una-distribucion-con-java/"
                }
            ]
        },
        {
            "nombre": "addAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<? extends E> c",
                    "description": ""
                },
                {
                    "nombre": "int index",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "clear",
            "description": "Elimina todos los elementos de la lista.\n",
            "code": "List<String> lista = new ArrayList<String>();\n\t\nlista.add(1,\"Elemento Uno\");\nlista.add(2,\"Elemento Dos\");\nlista.add(\"Elemento Tres\");\n\nlista.clear();\n",
            "ldc": [
                {
                    "nombre": "Calcular la moda de una distribuci\u00f3n con Java",
                    "url": "http://lineadecodigo.com/Java/calcular-la-moda-de-una-distribucion-con-java/"
                }
            ]
        },
        {
            "nombre": "contains",
            "description": "M\u00e9todo que nos permite buscar un elemento en una Lista.\n",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ],
            "code": "private static boolean searchNumber(int[] numbers, int numberToSearch) {\n  return Arrays.asList(numbers)\n    .contains(numberToSearch);\n}\n\npublic static void main(String[] args) {\n\n int[] numeros = {1,2,3,4,5,6,7,8};\n int numberToSearch = 3;\n\n if (searchNumber(numeros,numberToSearch))\n   System.out.println(\"El n\u00famero \" + numberToSearch + \" est\u00e1 en la lista\");\n else\n   System.out.println(\"El n\u00famero \" + numberToSearch + \" NO est\u00e1 en la lista\");\t \n}\n",
            "ldc": []
        },
        {
            "nombre": "containsAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<?> c",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "copyOf",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<? extends E> coll",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "equals",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "get",
            "description": "",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "hashCode",
            "description": ""
        },
        {
            "nombre": "indexOf",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "isEmpty",
            "description": ""
        },
        {
            "nombre": "iterator",
            "description": ""
        },
        {
            "nombre": "lastIndexOf",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "listIterator",
            "description": "",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "of",
            "description": "",
            "parametros": [
                {
                    "nombre": "E e3",
                    "description": ""
                },
                {
                    "nombre": "E e7",
                    "description": ""
                },
                {
                    "nombre": "E e1",
                    "description": ""
                },
                {
                    "nombre": "E e6",
                    "description": ""
                },
                {
                    "nombre": "E e5",
                    "description": ""
                },
                {
                    "nombre": "E e2",
                    "description": ""
                },
                {
                    "nombre": "E e9",
                    "description": ""
                },
                {
                    "nombre": "E e4",
                    "description": ""
                },
                {
                    "nombre": "E e8",
                    "description": ""
                },
                {
                    "nombre": "E e10",
                    "description": ""
                },
                {
                    "nombre": "E... elements",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "remove",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object o",
                    "description": ""
                },
                {
                    "nombre": "int index",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "removeAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<?> c",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "replaceAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "UnaryOperator<E> operator",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "retainAll",
            "description": "",
            "parametros": [
                {
                    "nombre": "Collection<?> c",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "set",
            "description": "",
            "parametros": [
                {
                    "nombre": "int index",
                    "description": ""
                },
                {
                    "nombre": "E element",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "size",
            "description": "Nos devuelve un entero con el tama\u00f1o de la lista.\n",
            "code": "List<String> lista = new ArrayList<String>();\n\t\nlista.add(1,\"Elemento Uno\");\nlista.add(2,\"Elemento Dos\");\nlista.add(\"Elemento Tres\");\n\nSystem.out.println(lista.size());\n",
            "ldc": []
        },
        {
            "nombre": "sort",
            "description": "",
            "parametros": [
                {
                    "nombre": "Comparator<? super E> c",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "spliterator",
            "description": ""
        },
        {
            "nombre": "subList",
            "description": "",
            "parametros": [
                {
                    "nombre": "int fromIndex",
                    "description": ""
                },
                {
                    "nombre": "int toIndex",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "toArray",
            "description": "M\u00e9todo que convierte una lista en un array. Devuelve el array con el contenido volcado desde la lista.\n",
            "parametros": [
                {
                    "nombre": "T[] a",
                    "description": ""
                }
            ],
            "code": "List<String> milista = new ArrayList<String>();\nmilista.add(\"Elemento 1\");\nmilista.add(\"Elemento 2\");\n\nString[] miarray = new String[milista.size()];\nmiarray = milista.toArray(miarray);\n\nfor(String s\u00a0: miarray)\n System.out.println(s);\n",
            "ldc": []
        }
    ]
}