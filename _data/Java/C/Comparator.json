{
    "description": "",
    "code": "class Comparador implements Comparator<String> {\n  public int compare(String s1, String s2) {        \t\n     return s1.toLowerCase().compareTo(s2.toLowerCase());\n  }\n}\n",
    "ldc": [
        {
            "nombre": "Ordenar un Vector de forma alfab\u00e9tica con Java",
            "url": "http://lineadecodigo.com/2009/03/25/ordenar-un-vector-de-forma-alfabetica-con-java/"
        }
    ],
    "metodos": [
        {
            "nombre": "compare",
            "description": "M\u00e9todo que compara dos objetos para la ordenaci\u00f3n. Los dos objetos son del tipo gen\u00e9rico definido por el Interface Comparator. Este m\u00e9todo deber\u00e1 de devolver un valor negativo si el primer argumento es menor que el segundo, un cero si los dos argumentos son iguales y un n\u00famero positivo sin el primer elemento es mayor que el segundo.\n",
            "parametros": [
                {
                    "nombre": "T o1",
                    "description": ""
                },
                {
                    "nombre": "T o2",
                    "description": ""
                }
            ],
            "code": "public int compare(String s1, String s2) {        \t\n  return s1.toLowerCase().compareTo(s2.toLowerCase());\n}\n",
            "ldc": [
                {
                    "nombre": "Ordenar un Vector de forma alfab\u00e9tica con Java",
                    "url": "http://lineadecodigo.com/2009/03/25/ordenar-un-vector-de-forma-alfabetica-con-java/"
                }
            ]
        },
        {
            "nombre": "comparing",
            "description": "",
            "parametros": [
                {
                    "nombre": "Comparator<? super U> keyComparator",
                    "description": ""
                },
                {
                    "nombre": "? extends U> keyExtractor",
                    "description": ""
                },
                {
                    "nombre": "Function<? super T",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "comparingDouble",
            "description": "",
            "parametros": [
                {
                    "nombre": "ToDoubleFunction<? super T> keyExtractor",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "comparingInt",
            "description": "",
            "parametros": [
                {
                    "nombre": "ToIntFunction<? super T> keyExtractor",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "comparingLong",
            "description": "",
            "parametros": [
                {
                    "nombre": "ToLongFunction<? super T> keyExtractor",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "equals",
            "description": "",
            "parametros": [
                {
                    "nombre": "Object obj",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "naturalOrder",
            "description": ""
        },
        {
            "nombre": "nullsFirst",
            "description": "",
            "parametros": [
                {
                    "nombre": "Comparator<? super T> comparator",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "nullsLast",
            "description": "",
            "parametros": [
                {
                    "nombre": "Comparator<? super T> comparator",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "reversed",
            "description": ""
        },
        {
            "nombre": "reverseOrder",
            "description": ""
        },
        {
            "nombre": "thenComparing",
            "description": "",
            "parametros": [
                {
                    "nombre": "Comparator<? super U> keyComparator",
                    "description": ""
                },
                {
                    "nombre": "? extends U> keyExtractor",
                    "description": ""
                },
                {
                    "nombre": "Function<? super T",
                    "description": ""
                },
                {
                    "nombre": "Comparator<? super T> other",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "thenComparingDouble",
            "description": "",
            "parametros": [
                {
                    "nombre": "ToDoubleFunction<? super T> keyExtractor",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "thenComparingInt",
            "description": "",
            "parametros": [
                {
                    "nombre": "ToIntFunction<? super T> keyExtractor",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "thenComparingLong",
            "description": "",
            "parametros": [
                {
                    "nombre": "ToLongFunction<? super T> keyExtractor",
                    "description": ""
                }
            ]
        }
    ]
}