{
    "description": "",
    "code": "try {\n \n  // Definimos el fichero y el canal a utilizar\n  File file = new File(\"test.txt\");\n  FileChannel channel = new RandomAccessFile(file, \"rw\").getChannel();\n\n  // Bloqueamos el fichero\n  FileLock lock = channel.lock();\n\n  // Intentamos adquirir el bloqueo del fichero\n  try {\n     lock = channel.tryLock();\n  } catch (OverlappingFileLockException e) {\n     // Fichero ya bloqueado\n  }\t    \n\t    \n  // Liberamos el bloqueo\n  lock.release();\t    \n  channel.close();\t   \n\n  } catch (Exception e) {\n}\n",
    "ldc": [
        {
            "nombre": "Bloquear un fichero con Java",
            "url": "http://lineadecodigo.com/Java/bloquear-un-fichero-con-java/"
        }
    ],
    "constructores": [
        {
            "nombre": "FileChannel",
            "description": ""
        }
    ],
    "metodos": [
        {
            "nombre": "force",
            "description": "",
            "parametros": [
                {
                    "nombre": "boolean metaData",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "lock",
            "description": "Obtiene un bloqueo sobre una regi\u00f3n del fichero correspondiente a la posici\u00f3n pasada como par\u00e1metro.\n",
            "parametros": [
                {
                    "nombre": "boolean shared",
                    "description": ""
                },
                {
                    "nombre": "long size",
                    "description": ""
                },
                {
                    "nombre": "long position",
                    "description": ""
                }
            ],
            "code": "try {\n \n  // Definimos el fichero y el canal a utilizar\n  File file = new File(\"test.txt\");\n  FileChannel channel = new RandomAccessFile(file, \"rw\").getChannel();\n\n  // Bloqueamos el fichero\n  FileLock lock = channel.lock();\n\n  // Intentamos adquirir el bloqueo del fichero\n  try {\n     lock = channel.tryLock();\n  } catch (OverlappingFileLockException e) {\n     // Fichero ya bloqueado\n  }\t    \n\t    \n  // Liberamos el bloqueo\n  lock.release();\t    \n  channel.close();\t   \n\n  } catch (Exception e) {\n}\n",
            "ldc": [
                {
                    "nombre": "Bloquear un fichero con Java",
                    "url": "http://lineadecodigo.com/Java/bloquear-un-fichero-con-java/"
                }
            ]
        },
        {
            "nombre": "map",
            "description": "",
            "parametros": [
                {
                    "nombre": "long size",
                    "description": ""
                },
                {
                    "nombre": "FileChannel.MapMode mode",
                    "description": ""
                },
                {
                    "nombre": "long position",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "open",
            "description": "",
            "parametros": [
                {
                    "nombre": "OpenOption... options",
                    "description": ""
                },
                {
                    "nombre": "FileAttribute<?>... attrs",
                    "description": ""
                },
                {
                    "nombre": "Path path",
                    "description": ""
                },
                {
                    "nombre": "Set<? extends OpenOption> options",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "position",
            "description": "",
            "parametros": [
                {
                    "nombre": "long newPosition",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "read",
            "description": "",
            "parametros": [
                {
                    "nombre": "long position",
                    "description": ""
                },
                {
                    "nombre": "int length",
                    "description": ""
                },
                {
                    "nombre": "ByteBuffer dst",
                    "description": ""
                },
                {
                    "nombre": "int offset",
                    "description": ""
                },
                {
                    "nombre": "ByteBuffer[] dsts",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "size",
            "description": ""
        },
        {
            "nombre": "transferFrom",
            "description": "",
            "parametros": [
                {
                    "nombre": "long count",
                    "description": ""
                },
                {
                    "nombre": "long position",
                    "description": ""
                },
                {
                    "nombre": "ReadableByteChannel src",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "transferTo",
            "description": "",
            "parametros": [
                {
                    "nombre": "WritableByteChannel target",
                    "description": ""
                },
                {
                    "nombre": "long count",
                    "description": ""
                },
                {
                    "nombre": "long position",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "truncate",
            "description": "",
            "parametros": [
                {
                    "nombre": "long size",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "tryLock",
            "description": "Intenta adquirir un bloqueo exclusivo sobre el fichero del canal.\n",
            "parametros": [
                {
                    "nombre": "boolean shared",
                    "description": ""
                },
                {
                    "nombre": "long size",
                    "description": ""
                },
                {
                    "nombre": "long position",
                    "description": ""
                }
            ],
            "code": "try {\n \n  // Definimos el fichero y el canal a utilizar\n  File file = new File(\"test.txt\");\n  FileChannel channel = new RandomAccessFile(file, \"rw\").getChannel();\n\n  // Bloqueamos el fichero\n  FileLock lock = channel.lock();\n\n  // Intentamos adquirir el bloqueo del fichero\n  try {\n     lock = channel.tryLock();\n  } catch (OverlappingFileLockException e) {\n     // Fichero ya bloqueado\n  }\t    \n\t    \n  // Liberamos el bloqueo\n  lock.release();\t    \n  channel.close();\t   \n\n  } catch (Exception e) {\n}\n",
            "ldc": [
                {
                    "nombre": "Bloquear un fichero con Java",
                    "url": "http://lineadecodigo.com/Java/bloquear-un-fichero-con-java/"
                }
            ]
        },
        {
            "nombre": "write",
            "description": "",
            "parametros": [
                {
                    "nombre": "long position",
                    "description": ""
                },
                {
                    "nombre": "ByteBuffer src",
                    "description": ""
                },
                {
                    "nombre": "int length",
                    "description": ""
                },
                {
                    "nombre": "int offset",
                    "description": ""
                },
                {
                    "nombre": "ByteBuffer[] srcs",
                    "description": ""
                }
            ]
        }
    ]
}