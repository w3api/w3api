{
    "description": "Objeto en Javascript que contiene m\u00e9todos y propiedades matem\u00e1ticas.\n",
    "code": "function formulas() {\n\n  /* \u00c1rea de un c\u00edrculo */\n  this.areaCirculo = function (radio) {\n    return Math.PI * Math.pow(radio,2);\n  }\n\t\n  this.hipotenusa = function (c1,c2) {\n    return Math.sqrt(Math.pow(c1, 2) + Math.pow(c2, 2));\n    // Aunque esta como experimental se por\u00eda poner return Math.hypot(cateto1,cateto2);\n  }\n\t\n  this.aleatorio = function (maximo) {\n    return parseInt(Math.random()*maximo+1);\n  }\n}\n",
    "ldc": [],
    "metodos": [
        {
            "nombre": "abs",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "acos",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "acosh",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "asin",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "asinh",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "PI",
            "description": "Propiedad que representa el n\u00famero PI. 3,14159\n",
            "code": "function formulas() {\n\n  /* \u00c1rea de un c\u00edrculo */\n  this.areaCirculo = function (radio) {\n    return Math.PI * Math.pow(radio,2);\n  }\n\t\n  this.hipotenusa = function (c1,c2) {\n    return Math.sqrt(Math.pow(c1, 2) + Math.pow(c2, 2));\n    // Aunque esta como experimental se por\u00eda poner return Math.hypot(cateto1,cateto2);\n  }\n}\n",
            "ldc": []
        },
        {
            "nombre": "atanh",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "atan2",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "y",
                    "description": ""
                },
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "cbrt",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "ceil",
            "description": "Devuelve el entero m\u00e1s peque\u00f1o superior o igual al n\u00famero pasado como par\u00e1metro.\nAs\u00ed Math.ceil(20.8) devolver\u00e1 21 y Math.ceil(-20.8) devolver\u00e1 20.\n",
            "code": "<form>\n<label for=\"dia\"><input type=\"text\" id=\"dia\" size=\"2\" value=\"01\"></label>/\n<label for=\"mes\"><input type=\"text\" id=\"mes\" size=\"2\" value=\"02\"></label>/\n<label for=\"annio\"><input type=\"text\" id=\"annio\" size=\"4\" value=\"2012\"></label>\n<button id=\"calcular\">Comparar con fecha del Sistema</button>\n</form>\n<span id=\"fecha\"></span>\n\n<script>\n\nvar boton = document.getElementById(\"calcular\");\nboton.addEventListener(\"click\",function(ev){\n                \n        dia = document.getElementById(\"dia\").value;\n        mes = document.getElementById(\"mes\").value;\n        annio = document.getElementById(\"annio\").value;\n        \n        fecha_texto = annio+\"-\"+mes+\"-\"+dia;\n        \n        fecha = new Date();\n        \n        ms = Date.parse(fecha_texto);\n        fecha2 = new Date(ms);\n        \n        one_day=1000*60*60*24;\n        diferencia = Math.ceil((fecha.getTime()-fecha2.getTime())/(one_day));\n        texto = (diferencia>0)?\"Hace \" + diferencia:\"Dentro de \" + (diferencia*-1);\n        \n        document.getElementById(\"fecha\").innerHTML = texto + \" dias.\";\n        ev.preventDefault();\n        \n},false);\n\n</script>\n",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ],
            "ldc": []
        },
        {
            "nombre": "clz32",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "cos",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "cosh",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "exp",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "expm1",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "floor",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "fround",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "doubleFloat",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "hypot",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "value1",
                    "description": ""
                },
                {
                    "nombre": "value2",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "imul",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "a",
                    "description": ""
                },
                {
                    "nombre": "b",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "log",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "log1p",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "log10",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "log2",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "max",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "value1",
                    "description": ""
                },
                {
                    "nombre": "value2",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "min",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "value1",
                    "description": ""
                },
                {
                    "nombre": "value2",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "pow",
            "description": "Eleva un n\u00famero a una potencia.\n",
            "code": "function formulas() {\n\n  /* \u00c1rea de un c\u00edrculo */\n  this.areaCirculo = function (radio) {\n    return Math.PI * Math.pow(radio,2);\n  }\n\t\n  this.hipotenusa = function (c1,c2) {\n    return Math.sqrt(Math.pow(c1, 2) + Math.pow(c2, 2));\n    // Aunque esta como experimental se por\u00eda poner return Math.hypot(cateto1,cateto2);\n  }\n}\n",
            "parametros": [
                {
                    "nombre": "base",
                    "description": ""
                },
                {
                    "nombre": "exponent",
                    "description": ""
                }
            ],
            "ldc": []
        },
        {
            "nombre": "random",
            "description": "Genera un n\u00famero pseudoaleatorio en coma flotante entre el 0.0 y el 1.0\n",
            "code": "function formulas() {\n  this.aleatorio = function (maximo) {\n    return parseInt(Math.random()*maximo+1);\n  }\n}\n",
            "ldc": []
        },
        {
            "nombre": "round",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "sign",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "sin",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "sinh",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "sqrt",
            "description": "M\u00e9todo que calcula la ra\u00edz cuadrada de un n\u00famero.\n",
            "code": "function formulas() {\n  this.hipotenusa = function (c1,c2) {\n    return Math.sqrt(Math.pow(c1, 2) + Math.pow(c2, 2));\n  }\n}\n",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ],
            "ldc": []
        },
        {
            "nombre": "tan",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "tanh",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        },
        {
            "nombre": "trunc",
            "description": "",
            "code": "",
            "parametros": [
                {
                    "nombre": "x",
                    "description": ""
                }
            ]
        }
    ],
    "propiedades": [
        {
            "nombre": "E",
            "description": "",
            "code": ""
        },
        {
            "nombre": "LN2",
            "description": "",
            "code": ""
        },
        {
            "nombre": "LN10",
            "description": "",
            "code": ""
        },
        {
            "nombre": "LOG2E",
            "description": "",
            "code": ""
        },
        {
            "nombre": "LOG10E",
            "description": "",
            "code": ""
        },
        {
            "nombre": "PI",
            "description": "Propiedad que representa el n\u00famero PI. 3,14159\n",
            "code": "function formulas() {\n\n  /* \u00c1rea de un c\u00edrculo */\n  this.areaCirculo = function (radio) {\n    return Math.PI * Math.pow(radio,2);\n  }\n\t\n  this.hipotenusa = function (c1,c2) {\n    return Math.sqrt(Math.pow(c1, 2) + Math.pow(c2, 2));\n    // Aunque esta como experimental se por\u00eda poner return Math.hypot(cateto1,cateto2);\n  }\n}\n",
            "ldc": []
        },
        {
            "nombre": "SQRT1_2",
            "description": "",
            "code": ""
        },
        {
            "nombre": "SQRT2",
            "description": "",
            "code": ""
        }
    ]
}